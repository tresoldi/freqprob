name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write  # For trusted publishing to PyPI

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Run tests
        run: |
          hatch run test

  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build hatch

      - name: Build package
        run: |
          hatch build

      - name: Verify build
        run: |
          ls -la dist/
          python -m pip install dist/*.whl
          python -c "import freqprob; print('Version:', freqprob.__version__)"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          # Extract changes from CHANGELOG.md for this version
          VERSION=${{ steps.version.outputs.version }}
          
          # Create release notes
          cat > release_notes.md << EOF
          ## FreqProb v$VERSION
          
          ### What's Changed
          See [CHANGELOG.md](https://github.com/tresoldi/freqprob/blob/main/CHANGELOG.md) for detailed changes.
          
          ### Installation
          \`\`\`bash
          pip install freqprob==$VERSION
          \`\`\`
          
          ### Quick Links
          - [Documentation](https://github.com/tresoldi/freqprob/blob/main/docs/user_guide.md)
          - [API Reference](https://github.com/tresoldi/freqprob/blob/main/docs/api_reference.md)
          - [Tutorials](https://github.com/tresoldi/freqprob/tree/main/docs)
          
          Full Changelog: https://github.com/tresoldi/freqprob/compare/v${{ github.event.before }}...v$VERSION
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') }}
          generate_release_notes: true

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/project/freqprob/
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Using trusted publishing - no need for password
          # Configure this in PyPI project settings
          print-hash: true
          verify-metadata: true

  publish-test-pypi:
    name: Publish to Test PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: testpypi
      url: https://test.pypi.org/project/freqprob/
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          print-hash: true
          verify-metadata: true